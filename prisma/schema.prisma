// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(cuid())
  username String
  password String
  teams    Team[]
}

model Team {
  id       String    @id @default(cuid())
  name     String
  private  Boolean
  members  User[]
  projects Project[]
}

model Project {
  id         String      @id @default(cuid())
  name       String
  team       Team        @relation(fields: [teamId], references: [id])
  teamId     String
  private    Boolean
  board      Board[]
  taskStates TaskState[]
  sprint     Sprint[]
}

model Board {
  id        String        @id @default(cuid())
  state     String
  project   Project       @relation(fields: [projectId], references: [id])
  projectId String
  columns   BoardColumn[]
}

model BoardColumn {
  id      String @id @default(cuid())
  name    String
  board   Board  @relation(fields: [boardId], references: [id])
  boardId String
  tasks   Task[]
}

model TaskState {
  id        String  @id @default(cuid())
  name      String
  project   Project @relation(fields: [projectId], references: [id])
  tasks     Task[]
  projectId String
}

model Task {
  id       String      @id @default(cuid())
  name     String
  state    TaskState   @relation(fields: [stateId], references: [id])
  stateId  String
  column   BoardColumn @relation(fields: [columnId], references: [id])
  columnId String
  done     Boolean
  sprint   Sprint?     @relation(fields: [sprintId], references: [id])
  sprintId String?
}

model Sprint {
  id        String  @id @default(cuid())
  name      String
  project   Project @relation(fields: [projectId], references: [id])
  projectId String
  tasks     Task[]
}
